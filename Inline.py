import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto, InputMediaVideo
import time
import threading

bot = telebot.TeleBot('YOUR_BOT_TOKEN')

# –ú–∞—Å—Å–∏–≤ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
CHANNELS = [
    "@Estetika_Kyxni_shkafi"
]

# –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö ID
ALLOWED_USERS = [
    7631971482,
    8438177540,
    804870556,
]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø
media_groups = {}


def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø"""
    return user_id in ALLOWED_USERS


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    bot.reply_to(message,
                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ), –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–≤—è–∑–∏.")


@bot.message_handler(commands=['channels'])
def show_channels(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    channels_list = "\n".join([f"‚Ä¢ {channel}" for channel in CHANNELS])
    bot.reply_to(message, f"üì¢ –ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:\n{channels_list}\n\n–í—Å–µ–≥–æ: {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤")


def create_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü"""
    keyboard = InlineKeyboardMarkup(row_width=1)

    button1 = InlineKeyboardButton(
        text="üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º",
        url="https://t.me/Estetika_kuhni_bot"
    )
    button2 = InlineKeyboardButton(
        text="‚≠ê –û—Ç–∑—ã–≤—ã",
        url="https://t.me/Estetika_otziv"
    )
    button3 = InlineKeyboardButton(
        text="üè† –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
        url="https://t.me/Etetika_prorkti"
    )

    keyboard.add(button1, button2, button3)
    return keyboard


def send_media_group_with_caption(channel, media_list, caption_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏"""
    try:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–æ–¥–ø–∏—Å–∏ (1024 —Å–∏–º–≤–æ–ª–∞ - –ª–∏–º–∏—Ç Telegram)
        if caption_text and len(caption_text) > 1024:
            caption_text = caption_text[:1020] + "..."

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –∫ –ø–µ—Ä–≤–æ–º—É –º–µ–¥–∏–∞
        if media_list and len(media_list) > 0:
            first_media = media_list[0]
            if isinstance(first_media, InputMediaPhoto):
                media_list[0] = InputMediaPhoto(first_media.media, caption=caption_text)
            elif isinstance(first_media, InputMediaVideo):
                media_list[0] = InputMediaVideo(first_media.media, caption=caption_text)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
        bot.send_media_group(channel, media_list)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        keyboard = create_keyboard()
        bot.send_message(channel, "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá", reply_markup=keyboard)

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
        return False


def send_single_media(channel, content_type, content_data, caption_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω–æ—á–Ω–æ–µ –º–µ–¥–∏–∞"""
    try:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–æ–¥–ø–∏—Å–∏
        if caption_text and len(caption_text) > 1024:
            caption_text = caption_text[:1020] + "..."

        keyboard = create_keyboard()

        if content_type == 'photo':
            bot.send_photo(channel, content_data, caption=caption_text, reply_markup=keyboard)
        elif content_type == 'video':
            bot.send_video(channel, content_data, caption=caption_text, reply_markup=keyboard)
        elif content_type == 'document':
            bot.send_document(channel, content_data, caption=caption_text, reply_markup=keyboard)
        else:  # text
            bot.send_message(channel, caption_text, reply_markup=keyboard)

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
        return False


def process_media_group(group_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—É—é –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É"""
    if group_id not in media_groups:
        return

    group_data = media_groups[group_id]
    time.sleep(2)  # –ñ–¥–µ–º —Å–±–æ—Ä –≤—Å–µ—Ö –º–µ–¥–∏–∞

    if len(group_data['media']) == 0:
        return

    user_id = group_data['user_id']
    caption_text = group_data['caption'] or ""

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ—Å—Ç–æ
    if caption_text and len(caption_text) < 900:
        caption_text += "\n\n–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá"

    success_count = 0
    failed_channels = []

    for channel in CHANNELS:
        try:
            if send_media_group_with_caption(channel, group_data['media'].copy(), caption_text):
                success_count += 1
                print(f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {channel}")
            else:
                failed_channels.append(channel)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            failed_channels.append(channel)

    # –û—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    report = f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ ({len(group_data['media'])} –º–µ–¥–∏–∞) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {success_count}/{len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"
    if failed_channels:
        report += f"\n‚ùå –û—à–∏–±–∫–∏: {', '.join(failed_channels)}"

    bot.send_message(user_id, report)

    # –£–¥–∞–ª—è–µ–º –≥—Ä—É–ø–ø—É
    try:
        del media_groups[group_id]
    except:
        pass


@bot.message_handler(content_types=['photo', 'video'])
def handle_media(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–¥–∏–∞"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    try:
        if message.media_group_id:
            # –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞
            group_id = message.media_group_id

            if group_id not in media_groups:
                media_groups[group_id] = {
                    'media': [],
                    'caption': message.caption or "",
                    'user_id': message.from_user.id,
                    'timer': None
                }

            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞
            if message.photo:
                media_item = InputMediaPhoto(message.photo[-1].file_id)
                media_groups[group_id]['media'].append(media_item)
            elif message.video:
                media_item = InputMediaVideo(message.video.file_id)
                media_groups[group_id]['media'].append(media_item)

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
            if message.caption:
                media_groups[group_id]['caption'] = message.caption

            # –ó–∞–ø—É—Å–∫–∞–µ–º/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
            if media_groups[group_id]['timer']:
                media_groups[group_id]['timer'].cancel()

            timer = threading.Timer(2.0, process_media_group, [group_id])
            media_groups[group_id]['timer'] = timer
            timer.start()

        else:
            # –û–¥–∏–Ω–æ—á–Ω–æ–µ –º–µ–¥–∏–∞
            handle_single_message(message)

    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(content_types=['text', 'document'])
def handle_single_message(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        main_text = ""
        if message.text:
            main_text = message.text
        elif message.caption:
            main_text = message.caption

        caption_text = main_text
        if main_text and len(main_text) < 900:
            caption_text += "\n\n–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        content_type = 'text'
        content_data = None

        if message.photo:
            content_type = 'photo'
            content_data = message.photo[-1].file_id
        elif message.video:
            content_type = 'video'
            content_data = message.video.file_id
        elif message.document:
            content_type = 'document'
            content_data = message.document.file_id

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        success_count = 0
        failed_channels = []

        for channel in CHANNELS:
            if send_single_media(channel, content_type, content_data, caption_text):
                success_count += 1
            else:
                failed_channels.append(channel)

        # –û—Ç—á–µ—Ç
        report = f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count}/{len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"
        if failed_channels:
            report += f"\n‚ùå –û—à–∏–±–∫–∏: {', '.join(failed_channels)}"

        bot.reply_to(message, report)

    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")