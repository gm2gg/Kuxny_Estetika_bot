import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot('')

# –ú–∞—Å—Å–∏–≤ –∫–∞–Ω–∞–ª–æ–≤ –∏ –≥—Ä—É–ø–ø –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
TRACKED_CHATS = [
    "@Estetika_Kyxni_shkafi",
    "@Etetika_prorkti"
]

# –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö ID (–∞–¥–º–∏–Ω—ã –±–æ—Ç–∞)
ALLOWED_USERS = [
    7631971482,
    8438177540,
    804870556,
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_settings = {}


def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É"""
    return user_id in ALLOWED_USERS


def create_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü"""
    keyboard = InlineKeyboardMarkup(row_width=1)

    button1 = InlineKeyboardButton(
        text="üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º",
        url="https://t.me/Estetika_kuhni_bot"
    )
    button2 = InlineKeyboardButton(
        text="‚≠ê –û—Ç–∑—ã–≤—ã",
        url="https://t.me/Estetika_otziv"
    )
    button3 = InlineKeyboardButton(
        text="üè† –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
        url="https://t.me/Etetika_prorkti"
    )

    keyboard.add(button1, button2, button3)
    return keyboard


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    
    welcome_text = """
ü§ñ –ë–æ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/true - –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
/false - –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º

–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö.
"""
    bot.reply_to(message, welcome_text)


@bot.message_handler(commands=['true'])
def set_true(message):
    """–í–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    
    user_id = message.from_user.id
    user_settings[user_id] = True
    bot.reply_to(message, "‚úÖ –¢–µ–ø–µ—Ä—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏")


@bot.message_handler(commands=['false'])
def set_false(message):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    
    user_id = message.from_user.id
    user_settings[user_id] = False
    bot.reply_to(message, "‚ùå –¢–µ–ø–µ—Ä—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –ù–ï –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏")


def should_add_buttons(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_settings.get(user_id, True)


def is_tracked_chat(chat_id, chat_username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —á–∞—Ç"""
    for chat in TRACKED_CHATS:
        if chat.startswith('@'):
            if chat_username and chat_username.lower() == chat.lower():
                return True, chat
        else:
            if str(chat_id) == chat:
                return True, chat
    return False, ""


def handle_chat_message(message, is_channel=False):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–æ–≤ (–∫–∞–Ω–∞–ª–æ–≤ –∏ –≥—Ä—É–ø–ø)"""
    chat_id = message.chat.id
    chat_username = f"@{message.chat.username}" if message.chat.username else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–≥–æ —á–∞—Ç–∞
    is_tracked, chat_name = is_tracked_chat(chat_id, chat_username)
    
    if not is_tracked:
        return
    
    # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤ - –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    # –î–ª—è –≥—Ä—É–ø–ø - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞
    if not is_channel:
        if not hasattr(message, 'from_user') or not message.from_user or message.from_user.id not in ALLOWED_USERS:
            print(f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ {chat_name} –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
            return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if is_channel:
        # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        user_id = ALLOWED_USERS[0] if ALLOWED_USERS else None
    else:
        # –î–ª—è –≥—Ä—É–ø–ø –∏—Å–ø–æ–ª—å–∑—É–µ–º ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        user_id = message.from_user.id
    
    add_buttons = should_add_buttons(user_id) if user_id else True
    
    if add_buttons:
        keyboard = create_keyboard()
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±–µ–∑ –æ—Ç–≤–µ—Ç–∞
            bot.send_message(
                chat_id, 
                "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá", 
                reply_markup=keyboard
            )
            
            sender_type = "–∫–∞–Ω–∞–ª–∞" if is_channel else "–∞–¥–º–∏–Ω–∞"
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é {sender_type} –≤ {chat_name}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫ –≤ {chat_name}: {e}")
    else:
        print(f"‚úÖ –†–µ–∂–∏–º /false - –∫–Ω–æ–ø–∫–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –≤ {chat_name}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–æ–≤
@bot.channel_post_handler(content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'sticker', 'animation'])
def handle_channel_post(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–æ–≤"""
    handle_chat_message(message, is_channel=True)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≥—Ä—É–ø–ø –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø
@bot.message_handler(content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'sticker', 'animation'], 
                    chat_types=['group', 'supergroup'])
def handle_group_message(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø"""
    handle_chat_message(message, is_channel=False)


@bot.message_handler(content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'sticker'])
def block_other_messages(message):
    """–ë–ª–æ–∫–∏—Ä—É–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥"""
    if message.text and message.text.startswith('/'):
        # –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏
        return
    
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    
    # –î–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    bot.reply_to(message, "‚ùå –ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print(f"–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —á–∞—Ç—ã: {', '.join(TRACKED_CHATS)}")
    print(f"–ê–¥–º–∏–Ω—ã –±–æ—Ç–∞: {', '.join(map(str, ALLOWED_USERS))}")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
