import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot('7585158499:AAG91_F-OhKvf0i3-zgObTmcccKGJNlAQNw')

# –ú–∞—Å—Å–∏–≤ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
CHANNELS = [
    "@Estetika_Kyxni_shkafi"
]

# –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö ID
ALLOWED_USERS = [
    8438177540,  # –î–æ–±–∞–≤—å—Ç–µ –Ω—É–∂–Ω—ã–µ ID
    7631971482,
]

def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø"""
    return user_id in ALLOWED_USERS

@bot.message_handler(commands=['start'])
def send_welcome(message):
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
        
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ), –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–≤—è–∑–∏.")

@bot.message_handler(commands=['channels'])
def show_channels(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
        
    channels_list = "\n".join([f"‚Ä¢ {channel}" for channel in CHANNELS])
    bot.reply_to(message, f"üì¢ –ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:\n{channels_list}\n\n–í—Å–µ–≥–æ: {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤")

def create_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)

    button1 = InlineKeyboardButton(
        text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º",
        url="https://t.me/Estetika_kuhni_bot"
    )

    button2 = InlineKeyboardButton(
        text="–ü—Ä–∏—Å–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç",
        url="https://t.me/Estetika_admi?start=project_calculation"
    )

    button3 = InlineKeyboardButton(
        text="–í—ã–µ–∑–¥ –Ω–∞ –∑–∞–º–µ—Ä",
        url="https://t.me/Estetika_admi?start=measurement_visit"
    )

    keyboard.add(button1)
    keyboard.add(button2, button3)
    return keyboard

def send_to_all_channels(content_type, content_data, caption_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã"""
    keyboard = create_keyboard()
    success_count = 0
    failed_channels = []

    for channel in CHANNELS:
        try:
            if content_type == 'photo':
                bot.send_photo(
                    channel,
                    content_data,
                    caption=caption_text,
                    reply_markup=keyboard
                )
            elif content_type == 'video':
                bot.send_video(
                    channel,
                    content_data,
                    caption=caption_text,
                    reply_markup=keyboard
                )
            elif content_type == 'document':
                bot.send_document(
                    channel,
                    content_data,
                    caption=caption_text,
                    reply_markup=keyboard
                )
            elif content_type == 'text':
                bot.send_message(
                    channel,
                    caption_text,
                    reply_markup=keyboard
                )
            success_count += 1
            print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª: {channel}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
            failed_channels.append(f"{channel} - {str(e)}")

    return success_count, failed_channels

@bot.message_handler(content_types=['text', 'photo', 'video', 'document'])
def handle_all_messages(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
        
    try:
        caption_text = "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µüëá"
        if message.caption:
            caption_text = f"{message.caption}\n\n{caption_text}"
        elif message.text and not (message.photo or message.video or message.document):
            caption_text = f"{message.text}\n\n{caption_text}"

        content_type = None
        content_data = None

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if message.photo:
            content_type = 'photo'
            content_data = message.photo[-1].file_id
        elif message.video:
            content_type = 'video'
            content_data = message.video.file_id
        elif message.document:
            content_type = 'document'
            content_data = message.document.file_id
        else:
            content_type = 'text'
            content_data = None

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        success_count, failed_channels = send_to_all_channels(content_type, content_data, caption_text)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        report = f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count} –∏–∑ {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"

        if failed_channels:
            report += f"\n\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {len(failed_channels)} –∫–∞–Ω–∞–ª–æ–≤:"
            for i, failed in enumerate(failed_channels[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –æ—à–∏–±–∫–∏
                report += f"\n{i}. {failed}"
            if len(failed_channels) > 3:
                report += f"\n... –∏ –µ—â–µ {len(failed_channels) - 3} –∫–∞–Ω–∞–ª–æ–≤"

        bot.reply_to(message, report)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print(f"–ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {CHANNELS}")
    print(f"–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {ALLOWED_USERS}")
    print("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    try:
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
