import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto, InputMediaVideo
import time
import threading

bot = telebot.TeleBot('')

# –ú–∞—Å—Å–∏–≤ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
CHANNELS = [
    "@Estetika_Kyxni_shkafi"
]

# –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö ID
ALLOWED_USERS = [
    7631971482,
    8438177540,
    804870556,
]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø
media_groups = {}


def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø"""
    return user_id in ALLOWED_USERS


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    bot.reply_to(message,
                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ), –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–≤—è–∑–∏.")


@bot.message_handler(commands=['channels'])
def show_channels(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    channels_list = "\n".join([f"‚Ä¢ {channel}" for channel in CHANNELS])
    bot.reply_to(message, f"üì¢ –ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:\n{channels_list}\n\n–í—Å–µ–≥–æ: {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤")


def create_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü"""
    keyboard = InlineKeyboardMarkup(row_width=1)  # 1 –∫–Ω–æ–ø–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ

    button1 = InlineKeyboardButton(
        text="üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º",
        url="https://t.me/Estetika_kuhni_bot"
    )

    button2 = InlineKeyboardButton(
        text="üìê –ü—Ä–∏—Å–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç",
        url="https://t.me/Estetika_admi?start=project_calculation"
    )

    button3 = InlineKeyboardButton(
        text="üìè –í—ã–µ–∑–¥ –Ω–∞ –∑–∞–º–µ—Ä",
        url="https://t.me/Estetika_admi?start=measurement_visit"
    )

    button4 = InlineKeyboardButton(
        text="‚≠ê –û—Ç–∑—ã–≤—ã",
        url="https://t.me/Etetika_prorkti"
    )

    button5 = InlineKeyboardButton(
        text="üè† –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
        url="https://t.me/Etetika_prorkti"
    )

    # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    keyboard.add(button1)
    keyboard.add(button2)
    keyboard.add(button3)
    keyboard.add(button4)
    keyboard.add(button5)
    
    return keyboard


def send_media_group_with_caption(channel, media_list, caption_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –ø–µ—Ä–≤–æ–º—É –º–µ–¥–∏–∞
        if media_list and len(media_list) > 0:
            # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –ø–µ—Ä–≤–æ–≥–æ –º–µ–¥–∏–∞ —Å –ø–æ–¥–ø–∏—Å—å—é
            first_media = media_list[0]

            # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–µ–¥–∏–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –ø–æ–¥–ø–∏—Å—å—é
            if isinstance(first_media, InputMediaPhoto):
                media_list[0] = InputMediaPhoto(
                    first_media.media,
                    caption=caption_text,
                    parse_mode='HTML'
                )
            elif isinstance(first_media, InputMediaVideo):
                media_list[0] = InputMediaVideo(
                    first_media.media,
                    caption=caption_text,
                    parse_mode='HTML'
                )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É —Å –ø–æ–¥–ø–∏—Å—å—é
        bot.send_media_group(channel, media_list)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –û–¢–î–ï–õ–¨–ù–´–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
        keyboard = create_keyboard()
        bot.send_message(channel, "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µüëá", reply_markup=keyboard)

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã –≤ {channel}: {e}")
        return False


def process_media_group(group_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—É—é –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É"""
    if group_id not in media_groups:
        return

    group_data = media_groups[group_id]

    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –≤—Å–µ –º–µ–¥–∏–∞ —É—Å–ø–µ–ª–∏ –ø—Ä–∏–π—Ç–∏
    time.sleep(1.5)

    if len(group_data['media']) == 0:
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    caption_text = group_data['caption'] if group_data['caption'] else ""

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
    success_count = 0
    failed_channels = []

    for channel in CHANNELS:
        try:
            if send_media_group_with_caption(channel, group_data['media'].copy(), caption_text):
                success_count += 1
                print(f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª: {channel}")
            else:
                failed_channels.append(f"{channel} - –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
            failed_channels.append(f"{channel} - {str(e)}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    report = f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ ({len(group_data['media'])} —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {success_count} –∏–∑ {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"
    if failed_channels:
        report += f"\n\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {len(failed_channels)} –∫–∞–Ω–∞–ª–æ–≤:"
        for i, failed in enumerate(failed_channels[:3], 1):
            report += f"\n{i}. {failed}"
        if len(failed_channels) > 3:
            report += f"\n... –∏ –µ—â–µ {len(failed_channels) - 3} –∫–∞–Ω–∞–ª–æ–≤"

    bot.send_message(group_data['user_id'], report)

    # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
    if group_id in media_groups:
        del media_groups[group_id]


@bot.message_handler(content_types=['photo', 'video'])
def handle_media(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ) —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    try:
        if message.media_group_id:
            # –≠—Ç–æ —á–∞—Å—Ç—å –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
            group_id = message.media_group_id

            if group_id not in media_groups:
                media_groups[group_id] = {
                    'media': [],
                    'caption': message.caption or '',
                    'user_id': message.from_user.id,
                    'last_update': time.time(),
                    'timer': None
                }

            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≤ –≥—Ä—É–ø–ø—É
            if message.photo:
                media_item = InputMediaPhoto(message.photo[-1].file_id)
                media_groups[group_id]['media'].append(media_item)
            elif message.video:
                media_item = InputMediaVideo(message.video.file_id)
                media_groups[group_id]['media'].append(media_item)

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å (–±–µ—Ä–µ–º –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é)
            if message.caption:
                media_groups[group_id]['caption'] = message.caption

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            media_groups[group_id]['last_update'] = time.time()

            # –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π
            if media_groups[group_id]['timer']:
                media_groups[group_id]['timer'].cancel()

            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã (–∂–¥–µ–º –≤—Å–µ –º–µ–¥–∏–∞)
            timer = threading.Timer(2.0, process_media_group, [group_id])
            media_groups[group_id]['timer'] = timer
            timer.start()

        else:
            # –û–¥–∏–Ω–æ—á–Ω–æ–µ –º–µ–¥–∏–∞ - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ä–∞–∑—É
            handle_single_media(message)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ–¥–∏–∞: {e}")
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞: {str(e)}")


def handle_single_media(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω–æ—á–Ω–æ–µ –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)"""
    try:
        caption_text = "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µüëá"
        if message.caption:
            caption_text = f"{message.caption}\n\n{caption_text}"
        else:
            caption_text = f"{caption_text}"

        content_type = None
        content_data = None

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if message.photo:
            content_type = 'photo'
            content_data = message.photo[-1].file_id
        elif message.video:
            content_type = 'video'
            content_data = message.video.file_id

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        success_count = 0
        failed_channels = []

        for channel in CHANNELS:
            try:
                if content_type == 'photo':
                    bot.send_photo(
                        channel,
                        content_data,
                        caption=caption_text,
                        reply_markup=create_keyboard()
                    )
                    success_count += 1
                elif content_type == 'video':
                    bot.send_video(
                        channel,
                        content_data,
                        caption=caption_text,
                        reply_markup=create_keyboard()
                    )
                    success_count += 1

                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª: {channel}")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
                failed_channels.append(f"{channel} - {str(e)}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        report = f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count} –∏–∑ {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"

        if failed_channels:
            report += f"\n\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {len(failed_channels)} –∫–∞–Ω–∞–ª–æ–≤:"
            for i, failed in enumerate(failed_channels[:3], 1):
                report += f"\n{i}. {failed}"
            if len(failed_channels) > 3:
                report += f"\n... –∏ –µ—â–µ {len(failed_channels) - 3} –∫–∞–Ω–∞–ª–æ–≤"

        bot.reply_to(message, report)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –º–µ–¥–∏–∞: {e}")
        bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(content_types=['text', 'document'])
def handle_text_and_documents(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã"""
    if not is_user_allowed(message.from_user.id):
        bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    try:
        caption_text = "–î–ª—è —Å–≤—è–∑–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µüëá"
        if message.text:
            caption_text = f"{message.text}\n\n{caption_text}"
        elif message.caption:
            caption_text = f"{message.caption}\n\n{caption_text}"

        content_type = 'text'
        content_data = None

        if message.document:
            content_type = 'document'
            content_data = message.document.file_id

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        success_count = 0
        failed_channels = []

        for channel in CHANNELS:
            try:
                if content_type == 'document':
                    bot.send_document(
                        channel,
                        content_data,
                        caption=caption_text,
                        reply_markup=create_keyboard()
                    )
                else:
                    bot.send_message(
                        channel,
                        caption_text,
                        reply_markup=create_keyboard()
                    )
                success_count += 1
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª: {channel}")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel}: {e}")
                failed_channels.append(f"{channel} - {str(e)}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count} –∏–∑ {len(CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤"

        if failed_channels:
            report += f"\n\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {len(failed_channels)} –∫–∞–Ω–∞–ª–æ–≤:"
            for i, failed in enumerate(failed_channels[:3], 1):
                report += f"\n{i}. {failed}"
            if len(failed_channels) > 3:
                report += f"\n... –∏ –µ—â–µ {len(failed_channels) - 3} –∫–∞–Ω–∞–ª–æ–≤"

        bot.reply_to(message, report)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞/–¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print(f"–ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {CHANNELS}")
    print(f"–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {ALLOWED_USERS}")
    print("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")

    try:
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:

        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")


